"""
Created on Mon Jan 29 12:22 2024
Goal: Perform SNP and Sample level QC
@@author: Shrishtee Kandoi (github: ShrishteeKandoi)
Username: kandos01
"""

#Load required modules
ml plink
cd /sc/arion/projects/tauomics/Shrishtee/PART_DATA_SOW_KAT_CHOP/CHOP

#Read each chrom per batch
# i=${1}
dir=/sc/arion/projects/tauomics/Shrishtee/PART_DATA_SOW_KAT_CHOP/CHOP

########################################
################ Step 1 ################
########################################

#Investigate missingness per individual and per SNP and make histograms
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped --missing
# output: plink.imiss and plink.lmiss, these files show respectively the proportion of missing SNPs per individual and the proportion of missing individuals per SNP.

#Generate plots to visualize the missingness results
Rscript --no-save /sc/arion/projects/tauomics/Shrishtee/1_QC_GWAS/hist_miss.R

#Delete SNPs and Samples with missingness > 0.2
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped --geno 0.2 --mind 0.2 --make-bed --out ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.2 -keep-allele-order

# 8450 variants removed due to missing genotype data (--geno).
# 645577 variants and 600 people pass filters and QC.

#Check missingness again and plot
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.2 --missing
Rscript --no-save /sc/arion/projects/tauomics/Shrishtee/1_QC_GWAS/hist_miss.R

########################################
################ Step 2 ################
########################################

# Generate a bfile with autosomal SNPs only and delete SNPs with a low minor allele frequency (MAF).

# Select autosomal SNPs only (i.e., from chromosomes 1 to 22)
awk '{ if ($1 >= 1 && $1 <= 22) print $2 }' ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.2.bim > snp_1_22.txt
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.2 --extract snp_1_22.txt --make-bed --out ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.3

# Generate a plot of the MAF distribution
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.3 --freq --out MAF_check
Rscript --no-save /sc/arion/projects/tauomics/Shrishtee/1_QC_GWAS/MAF_check.R

# Remove SNPs with a low MAF frequency (A conventional MAF threshold for a regular GWAS is between 0.01 or 0.05, depending on sample size)
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.3 --maf 0.01 --make-bed --out ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.4

#MAF - 0.01 ===> 476052 remained, 140343 SNPs removed
#MAF - 0.05 ===> 289902 remained, 326493 SNPs removed

########################################
################ Step 4 ################
########################################

# Delete SNPs which are not in Hardy-Weinberg equilibrium (HWE)
# Check the distribution of HWE p-values of all SNPs
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.4 --hardy
#Writing Hardy-Weinberg report (founders only) to plink.hwe ... done.

#Selecting SNPs with HWE p-value below 0.00001, required for one of the two plot generated by the next Rscript, allows to zoom in on strongly deviating SNPs. 
awk '{ if ($9 <0.00001) print $0 }' plink.hwe > plinkzoomhwe.hwe
Rscript --no-save /sc/arion/projects/tauomics/Shrishtee/1_QC_GWAS/hwe.R

#By default the --hwe option in plink only filters for controls.
#Therefore, we use two steps, first we use a stringent HWE threshold for controls, followed by a less stringent threshold for the case data.
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.4 --hwe 1e-6 --make-bed --out ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.5

# The HWE threshold for the cases filters out only SNPs which deviate extremely from HWE. 
# This second HWE step only focuses on cases because in the controls all SNPs with a HWE p-value < hwe 1e-6 were already removed
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.5 --hwe 1e-10 --hwe-all --make-bed --out ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.6

#473285 SNPs pass filters and QC
# Theoretical background for this step is given in our accompanying article: https://www.ncbi.nlm.nih.gov/pubmed/29484742 .

########################################
################ Step 5 ################
########################################

# Generate a plot of the distribution of the heterozygosity rate of your subjects and remove individuals with a heterozygosity rate deviating more than 3 sd from the mean.

# Checks for heterozygosity are performed on a set of SNPs which are not highly correlated.
# Therefore, to generate a list of non-(highly)correlated SNPs, we exclude high inversion regions (inversion.txt [High LD regions]) and prune the SNPs using the command --indep-pairwise.
# The parameters 50 5 0.2 stand respectively for: the window size, the number of SNPs to shift the window at each step, and the multiple correlation coefficient for a SNP being regressed on all other SNPs simultaneously.

# Inversions file is the region file with high-LD: https://github.com/cran/plinkQC/blob/master/inst/extdata/high-LD-regions-hg19-GRCh37.txt
plink --bfile ${dir}/IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.6 --extract inversions_grch37.txt --range --indep-pairwise 50 5 0.2 --out indepSNP
# Note, don't delete the file indepSNP.prune.in, we will use this file in later steps of the tutorial.

plink --bfile IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.6 --extract indepSNP.prune.in --het --out R_check
# This file contains your pruned data set.

# Plot of the heterozygosity rate distribution
Rscript --no-save /sc/arion/projects/tauomics/Shrishtee/1_QC_GWAS/check_heterozygosity_rate.R

# The following code generates a list of individuals who deviate more than 3 standard deviations from the heterozygosity rate mean.
# For data manipulation we recommend using UNIX. However, when performing statistical calculations R might be more convenient, hence the use of the Rscript for this step:
Rscript --no-save /sc/arion/projects/tauomics/Shrishtee/1_QC_GWAS/heterozygosity_outliers_list.R

# Output of the command above: fail-het-qc.txt .
# When using our example data/the HapMap data this list contains 2 individuals (i.e., two individuals have a heterozygosity rate deviating more than 3 SD's from the mean).
# Adapt this file to make it compatible for PLINK, by removing all quotation marks from the file and selecting only the first two columns.
sed 's/"// g' fail-het-qc.txt | awk '{print$1, $2}'> het_fail_ind.txt

# Remove heterozygosity rate outliers.
plink --bfile IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.6 --remove het_fail_ind.txt --make-bed --out IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.7

########################################
################ Step 6 ################
########################################

# It is essential to check datasets you analyse for cryptic relatedness.
# Assuming a random population sample we are going to exclude all individuals above the pihat threshold of 0.2 in this tutorial.

# Check for relationships between individuals with a pihat > 0.2.
plink --bfile IKF_Neurology_x600_2-22-24_PLINK_FILES.txt.GSA-24v3.ped.7 --extract indepSNP.prune.in --genome --min 0.2 --out pihat_min0.2

# The HapMap dataset is known to contain parent-offspring relations. 
# The following commands will visualize specifically these parent-offspring relations, using the z values. 
awk '{ if ($8 >0.9) print $0 }' pihat_min0.2.genome > zoom_pihat.genome




##### STEPS THAT HAVEN'T BEEN PERFORMED


########################################
################ Step 2 ################
########################################

# Check for sex discrepancy.
plink --bfile upenn_ucla_mssm.chr$i.2 --check-sex --allow-no-sex

# Generate plots to visualize the sex-check results.
Rscript --no-save /sc/arion/projects/tauomics/Shrishtee/1_QC_GWAS/gender_check.R

# 1) Delete individuals with sex discrepancy.
grep "PROBLEM" plink.sexcheck| awk '{print$1,$2}'> sex_discrepancy.txt
# This command generates a list of individuals with the status �PROBLEM�.
plink --bfile upenn_ucla_mssm.chr$i.5 --remove sex_discrepancy.txt --make-bed --out upenn_ucla_mssm.chr$i.6 
# This command removes the list of individuals with the status �PROBLEM�.

# 2) Impute-sex.
plink --bfile HapMap_3_r3_5 --impute-sex --make-bed --out HapMap_3_r3_6
# This imputes the sex based on the genotype information into your data set.

